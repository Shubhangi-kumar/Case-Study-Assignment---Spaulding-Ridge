create database Casestudy;
use casestudy;

------------------------------------------------RoleTable---------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE Role (
    RoleID INT PRIMARY KEY AUTO_INCREMENT,
    RoleName VARCHAR(100) NOT NULL UNIQUE
);

------------------------------------------------LocationTable-----------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE Location (
    LocationID INT PRIMARY KEY AUTO_INCREMENT,
    LocationName VARCHAR(100) NOT NULL UNIQUE
);

------------------------------------------------EmployeeTable------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE Employee (
    EmployeeID INT PRIMARY KEY AUTO_INCREMENT,
    EmployeeName VARCHAR(100) NOT NULL,
    RoleID INT,
    LocationID INT,
    Status ENUM('Active', 'Inactive') DEFAULT 'Active',
    Compensation DECIMAL(10,2),

    FOREIGN KEY (RoleID) REFERENCES Role(RoleID),
    FOREIGN KEY (LocationID) REFERENCES Location(LocationID)
);

------------------------------------------------FilterEmployeesByRoleAndLocation-----------------------------------------------------------------------------------------------------------------------------------

DELIMITER //

CREATE PROCEDURE FilterEmployeesByRoleAndLocation (
    IN roleFilter VARCHAR(100),
    IN locationFilter VARCHAR(100),
    IN includeInactive BOOLEAN
)
BEGIN
    SELECT 
        e.Name AS EmployeeName,
        r.RoleName,
        l.LocationName,
        e.Compensation
    FROM 
        Employee e
    JOIN Role r ON e.RoleID = r.RoleID
    JOIN Location l ON e.LocationID = l.LocationID
    WHERE 
        r.RoleName = roleFilter
        AND l.LocationName = locationFilter
        AND (includeInactive OR e.Active = TRUE);
END //

DELIMITER ;

-----------------------------GetAverageCompensationByLocation-----------------------------------------------------------------------------------------------------------------------------------------------------

DELIMITER //

CREATE PROCEDURE GetAverageCompensationByLocation (
    IN locationFilter VARCHAR(100),
    IN includeInactive BOOLEAN
)
BEGIN
    SELECT 
        l.LocationName,
        AVG(e.Compensation) AS AverageCompensation
    FROM 
        Employee e
    JOIN Location l ON e.LocationID = l.LocationID
    WHERE 
        l.LocationName = locationFilter
        AND (includeInactive OR e.Active = TRUE)
    GROUP BY 
        l.LocationName;
END //

DELIMITER ;

